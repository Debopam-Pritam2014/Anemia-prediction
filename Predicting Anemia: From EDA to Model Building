{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8859848,"sourceType":"datasetVersion","datasetId":5334004}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/debopamdey/predicting-anemia-from-eda-to-model-building?scriptVersionId=187110245\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-06T13:08:07.767346Z","iopub.execute_input":"2024-07-06T13:08:07.768207Z","iopub.status.idle":"2024-07-06T13:08:08.157626Z","shell.execute_reply.started":"2024-07-06T13:08:07.768161Z","shell.execute_reply":"2024-07-06T13:08:08.156389Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.15956Z","iopub.execute_input":"2024-07-06T13:08:08.160037Z","iopub.status.idle":"2024-07-06T13:08:08.362315Z","shell.execute_reply.started":"2024-07-06T13:08:08.15999Z","shell.execute_reply":"2024-07-06T13:08:08.36129Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df=pd.read_csv('/kaggle/input/anaemia-prediction/output.csv')","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.36358Z","iopub.execute_input":"2024-07-06T13:08:08.363906Z","iopub.status.idle":"2024-07-06T13:08:08.38267Z","shell.execute_reply.started":"2024-07-06T13:08:08.363878Z","shell.execute_reply":"2024-07-06T13:08:08.381583Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head(3)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.386203Z","iopub.execute_input":"2024-07-06T13:08:08.386617Z","iopub.status.idle":"2024-07-06T13:08:08.416315Z","shell.execute_reply.started":"2024-07-06T13:08:08.386584Z","shell.execute_reply":"2024-07-06T13:08:08.415001Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.417642Z","iopub.execute_input":"2024-07-06T13:08:08.418016Z","iopub.status.idle":"2024-07-06T13:08:08.425505Z","shell.execute_reply.started":"2024-07-06T13:08:08.417985Z","shell.execute_reply":"2024-07-06T13:08:08.424299Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.427085Z","iopub.execute_input":"2024-07-06T13:08:08.427596Z","iopub.status.idle":"2024-07-06T13:08:08.437398Z","shell.execute_reply.started":"2024-07-06T13:08:08.427546Z","shell.execute_reply":"2024-07-06T13:08:08.436191Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Number column is same as the index number. So I am dropping the Number Column**","metadata":{}},{"cell_type":"code","source":"df.drop(columns=['Number'],inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.438762Z","iopub.execute_input":"2024-07-06T13:08:08.439097Z","iopub.status.idle":"2024-07-06T13:08:08.4544Z","shell.execute_reply.started":"2024-07-06T13:08:08.439068Z","shell.execute_reply":"2024-07-06T13:08:08.453204Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.455935Z","iopub.execute_input":"2024-07-06T13:08:08.456382Z","iopub.status.idle":"2024-07-06T13:08:08.468322Z","shell.execute_reply.started":"2024-07-06T13:08:08.45633Z","shell.execute_reply":"2024-07-06T13:08:08.467146Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Basic Data Exploration","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.469779Z","iopub.execute_input":"2024-07-06T13:08:08.470163Z","iopub.status.idle":"2024-07-06T13:08:08.495384Z","shell.execute_reply.started":"2024-07-06T13:08:08.47012Z","shell.execute_reply":"2024-07-06T13:08:08.494155Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.500119Z","iopub.execute_input":"2024-07-06T13:08:08.500514Z","iopub.status.idle":"2024-07-06T13:08:08.510628Z","shell.execute_reply.started":"2024-07-06T13:08:08.500482Z","shell.execute_reply":"2024-07-06T13:08:08.509316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.512213Z","iopub.execute_input":"2024-07-06T13:08:08.512622Z","iopub.status.idle":"2024-07-06T13:08:08.524796Z","shell.execute_reply.started":"2024-07-06T13:08:08.512592Z","shell.execute_reply":"2024-07-06T13:08:08.523502Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**No null values and duplicate values as well**","metadata":{}},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.526794Z","iopub.execute_input":"2024-07-06T13:08:08.527271Z","iopub.status.idle":"2024-07-06T13:08:08.555423Z","shell.execute_reply.started":"2024-07-06T13:08:08.52723Z","shell.execute_reply":"2024-07-06T13:08:08.55426Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Sex'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.556995Z","iopub.execute_input":"2024-07-06T13:08:08.557388Z","iopub.status.idle":"2024-07-06T13:08:08.567285Z","shell.execute_reply.started":"2024-07-06T13:08:08.557356Z","shell.execute_reply":"2024-07-06T13:08:08.565951Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Anaemic'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.569212Z","iopub.execute_input":"2024-07-06T13:08:08.569587Z","iopub.status.idle":"2024-07-06T13:08:08.579566Z","shell.execute_reply.started":"2024-07-06T13:08:08.569542Z","shell.execute_reply":"2024-07-06T13:08:08.578397Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Insights:**\n* We need to perform preprocessing in Sex column maybe there is having some spaces issue\n* Dataset is highly imbalanced","metadata":{}},{"cell_type":"code","source":"def transform_sex(row):\n    if row[0]=='M':\n        return 'Male'\n    else:\n        return 'Female'","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.580943Z","iopub.execute_input":"2024-07-06T13:08:08.581362Z","iopub.status.idle":"2024-07-06T13:08:08.591046Z","shell.execute_reply.started":"2024-07-06T13:08:08.581329Z","shell.execute_reply":"2024-07-06T13:08:08.589822Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Sex']=df['Sex'].apply(transform_sex)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.59285Z","iopub.execute_input":"2024-07-06T13:08:08.593389Z","iopub.status.idle":"2024-07-06T13:08:08.602743Z","shell.execute_reply.started":"2024-07-06T13:08:08.593327Z","shell.execute_reply":"2024-07-06T13:08:08.601672Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Sex'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.604286Z","iopub.execute_input":"2024-07-06T13:08:08.604875Z","iopub.status.idle":"2024-07-06T13:08:08.618088Z","shell.execute_reply.started":"2024-07-06T13:08:08.604834Z","shell.execute_reply":"2024-07-06T13:08:08.616953Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder,LabelEncoder","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.620034Z","iopub.execute_input":"2024-07-06T13:08:08.620822Z","iopub.status.idle":"2024-07-06T13:08:08.629938Z","shell.execute_reply.started":"2024-07-06T13:08:08.620779Z","shell.execute_reply":"2024-07-06T13:08:08.628748Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Converting Categorical Columns into Numerical","metadata":{}},{"cell_type":"code","source":"ohe=OneHotEncoder(drop='first',sparse_output=False)\nsex_encoded=ohe.fit_transform(df[['Sex']])","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.631657Z","iopub.execute_input":"2024-07-06T13:08:08.632539Z","iopub.status.idle":"2024-07-06T13:08:08.650138Z","shell.execute_reply.started":"2024-07-06T13:08:08.632501Z","shell.execute_reply":"2024-07-06T13:08:08.648835Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sex_encoded_df = pd.DataFrame(sex_encoded, columns=ohe.get_feature_names_out(['Sex']))\n\n# Drop the original 'Sex' column and concatenate the new one-hot encoded columns\ndf = df.drop('Sex', axis=1)\ndf = pd.concat([df, sex_encoded_df], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.651849Z","iopub.execute_input":"2024-07-06T13:08:08.652324Z","iopub.status.idle":"2024-07-06T13:08:08.661805Z","shell.execute_reply.started":"2024-07-06T13:08:08.652279Z","shell.execute_reply":"2024-07-06T13:08:08.660587Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.663208Z","iopub.execute_input":"2024-07-06T13:08:08.66356Z","iopub.status.idle":"2024-07-06T13:08:08.689035Z","shell.execute_reply.started":"2024-07-06T13:08:08.66353Z","shell.execute_reply":"2024-07-06T13:08:08.687852Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"le=LabelEncoder()\nlabel_encoded=le.fit_transform(df['Anaemic'])\nlabel_encoded_df=pd.DataFrame({'Target':label_encoded})\nnew_df=pd.concat([df,label_encoded_df],axis=1)\nnew_df.drop(columns=['Anaemic'],inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.690687Z","iopub.execute_input":"2024-07-06T13:08:08.691134Z","iopub.status.idle":"2024-07-06T13:08:08.700775Z","shell.execute_reply.started":"2024-07-06T13:08:08.691075Z","shell.execute_reply":"2024-07-06T13:08:08.699563Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"new_df","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.702178Z","iopub.execute_input":"2024-07-06T13:08:08.703066Z","iopub.status.idle":"2024-07-06T13:08:08.726153Z","shell.execute_reply.started":"2024-07-06T13:08:08.703021Z","shell.execute_reply":"2024-07-06T13:08:08.724835Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"new_df['Sex_Male']=new_df['Sex_Male'].astype(int)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.727843Z","iopub.execute_input":"2024-07-06T13:08:08.728326Z","iopub.status.idle":"2024-07-06T13:08:08.736344Z","shell.execute_reply.started":"2024-07-06T13:08:08.728294Z","shell.execute_reply":"2024-07-06T13:08:08.735139Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Basic Visualization","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(6,4))\nsns.barplot(x=new_df['Sex_Male'].value_counts().index,y=new_df['Sex_Male'].value_counts().values)\nplt.xlabel('Gender 0: Male and 1: Female')\nplt.ylabel('Counts')\nplt.plot()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:08.738161Z","iopub.execute_input":"2024-07-06T13:08:08.738568Z","iopub.status.idle":"2024-07-06T13:08:09.012498Z","shell.execute_reply.started":"2024-07-06T13:08:08.738536Z","shell.execute_reply":"2024-07-06T13:08:09.011289Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(6,4))\nsns.barplot(x=new_df['Target'].value_counts().index,y=new_df['Target'].value_counts().values)\nplt.xlabel('Target 0: No and 1: Yes')\nplt.ylabel('Counts')\nplt.plot()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:09.013994Z","iopub.execute_input":"2024-07-06T13:08:09.014375Z","iopub.status.idle":"2024-07-06T13:08:09.216826Z","shell.execute_reply.started":"2024-07-06T13:08:09.014344Z","shell.execute_reply":"2024-07-06T13:08:09.215812Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Insights:**\n1. Female count is higher than Male count\n1. Target🎯 Yes count is less than Target 🎯 No","metadata":{}},{"cell_type":"code","source":"import warnings \nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:09.218384Z","iopub.execute_input":"2024-07-06T13:08:09.218843Z","iopub.status.idle":"2024-07-06T13:08:09.22465Z","shell.execute_reply.started":"2024-07-06T13:08:09.218799Z","shell.execute_reply":"2024-07-06T13:08:09.223476Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.countplot(x='Sex_Male', hue='Target', data=new_df)\nplt.title('Count of Gender with Target')\nplt.xlabel('-->Gender 0: Male and 1: Female--<')\nplt.ylabel('Count')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:09.232139Z","iopub.execute_input":"2024-07-06T13:08:09.232579Z","iopub.status.idle":"2024-07-06T13:08:09.45736Z","shell.execute_reply.started":"2024-07-06T13:08:09.232544Z","shell.execute_reply":"2024-07-06T13:08:09.456015Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Insights:**\n1.  Male % is higher in Anaemic==Yes as comapare to Female \n1.  Female % is higher in Anaemic==No as comapare to Male ","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.histplot(new_df['%Red Pixel'],kde=True)\nplt.plot()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:09.45885Z","iopub.execute_input":"2024-07-06T13:08:09.459316Z","iopub.status.idle":"2024-07-06T13:08:10.020355Z","shell.execute_reply.started":"2024-07-06T13:08:09.459279Z","shell.execute_reply":"2024-07-06T13:08:10.019151Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.histplot(new_df['%Green pixel'],kde=True)\nplt.plot()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:10.02189Z","iopub.execute_input":"2024-07-06T13:08:10.022331Z","iopub.status.idle":"2024-07-06T13:08:10.344143Z","shell.execute_reply.started":"2024-07-06T13:08:10.022293Z","shell.execute_reply":"2024-07-06T13:08:10.342918Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.histplot(new_df['%Blue pixel'],kde=True)\nplt.plot()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:10.345866Z","iopub.execute_input":"2024-07-06T13:08:10.346297Z","iopub.status.idle":"2024-07-06T13:08:10.643877Z","shell.execute_reply.started":"2024-07-06T13:08:10.346262Z","shell.execute_reply":"2024-07-06T13:08:10.642681Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Insights:**\n\n1. Most of the Red pixel values are between 42 to 47\n2. Maximum Green pixels values are between 27.5 - 30 and most values lies in 27 - 30.5\n3. Maximum Blue pixels values are between 26-27 and most values lies in 24.5 -27.5","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.violinplot(x='Target', y='%Red Pixel', data=new_df)\nplt.title('Violin Plot of %Red pixel  vs Target')\nplt.xlabel('Target')\nplt.ylabel('%Red pixel')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:10.645501Z","iopub.execute_input":"2024-07-06T13:08:10.645865Z","iopub.status.idle":"2024-07-06T13:08:10.921703Z","shell.execute_reply.started":"2024-07-06T13:08:10.645835Z","shell.execute_reply":"2024-07-06T13:08:10.920459Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.violinplot(x='Target', y='%Blue pixel', data=new_df)\nplt.title('Violin Plot of %Blue pixel  vs Target')\nplt.xlabel('Target')\nplt.ylabel('%Blue pixel')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:10.923212Z","iopub.execute_input":"2024-07-06T13:08:10.923645Z","iopub.status.idle":"2024-07-06T13:08:11.22295Z","shell.execute_reply.started":"2024-07-06T13:08:10.923609Z","shell.execute_reply":"2024-07-06T13:08:11.221536Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(6, 4))\nsns.violinplot(x='Target', y='%Green pixel', data=new_df)\nplt.title('Violin Plot of %Green pixel  vs Target')\nplt.xlabel('Target')\nplt.ylabel('%Green pixel')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:11.22452Z","iopub.execute_input":"2024-07-06T13:08:11.225Z","iopub.status.idle":"2024-07-06T13:08:11.517677Z","shell.execute_reply.started":"2024-07-06T13:08:11.224958Z","shell.execute_reply":"2024-07-06T13:08:11.516466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Box plot\nplt.figure(figsize=(6, 4))\nsns.boxplot(x='Target', y='%Red Pixel', data=new_df)\nplt.title('Box Plot of %Red pixel vs Target')\nplt.xlabel('Target')\nplt.ylabel('%Red pixel')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:11.521749Z","iopub.execute_input":"2024-07-06T13:08:11.52216Z","iopub.status.idle":"2024-07-06T13:08:11.804113Z","shell.execute_reply.started":"2024-07-06T13:08:11.522126Z","shell.execute_reply":"2024-07-06T13:08:11.802919Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Box plot\nplt.figure(figsize=(6, 4))\nsns.boxplot(x='Target', y='%Green pixel', data=new_df)\nplt.title('Box Plot of %Green pixel vs Target')\nplt.xlabel('Target')\nplt.ylabel('%Green pixel')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:11.805591Z","iopub.execute_input":"2024-07-06T13:08:11.805953Z","iopub.status.idle":"2024-07-06T13:08:12.034406Z","shell.execute_reply.started":"2024-07-06T13:08:11.805922Z","shell.execute_reply":"2024-07-06T13:08:12.033173Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Box plot\nplt.figure(figsize=(6, 4))\nsns.boxplot(x='Target', y='%Blue pixel', data=new_df)\nplt.title('Box Plot of %Blue pixel vs Target')\nplt.xlabel('Target')\nplt.ylabel('%Blue pixel')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:08:12.035879Z","iopub.execute_input":"2024-07-06T13:08:12.036265Z","iopub.status.idle":"2024-07-06T13:08:12.25929Z","shell.execute_reply.started":"2024-07-06T13:08:12.036231Z","shell.execute_reply":"2024-07-06T13:08:12.25769Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Insights:**\nGreen, Red pixels %  values are mostly varying for Anaemia and Non-anaemia disease than Blue Pixel % values","metadata":{}},{"cell_type":"markdown","source":"# Model Building","metadata":{}},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier ","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:09:45.516184Z","iopub.execute_input":"2024-07-06T13:09:45.516617Z","iopub.status.idle":"2024-07-06T13:09:45.522025Z","shell.execute_reply.started":"2024-07-06T13:09:45.516583Z","shell.execute_reply":"2024-07-06T13:09:45.520719Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split,GridSearchCV","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:09:36.5559Z","iopub.execute_input":"2024-07-06T13:09:36.557019Z","iopub.status.idle":"2024-07-06T13:09:36.562186Z","shell.execute_reply.started":"2024-07-06T13:09:36.556978Z","shell.execute_reply":"2024-07-06T13:09:36.560713Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X=new_df.drop(columns=['Target'])\ny=new_df['Target']","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:11:28.316153Z","iopub.execute_input":"2024-07-06T13:11:28.316612Z","iopub.status.idle":"2024-07-06T13:11:28.323482Z","shell.execute_reply.started":"2024-07-06T13:11:28.316581Z","shell.execute_reply":"2024-07-06T13:11:28.322199Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print('x shape is:',X.shape)\nprint('y shape is:',y.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:12:06.916316Z","iopub.execute_input":"2024-07-06T13:12:06.916804Z","iopub.status.idle":"2024-07-06T13:12:06.92352Z","shell.execute_reply.started":"2024-07-06T13:12:06.916769Z","shell.execute_reply":"2024-07-06T13:12:06.922213Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"scaler=StandardScaler()\nX_scaled=scaler.fit_transform(X)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:13:07.73583Z","iopub.execute_input":"2024-07-06T13:13:07.7363Z","iopub.status.idle":"2024-07-06T13:13:07.746688Z","shell.execute_reply.started":"2024-07-06T13:13:07.736264Z","shell.execute_reply":"2024-07-06T13:13:07.745495Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**I tried MinMaxScaler() and RobustScaler() but StandardScaler() is giving best result**","metadata":{}},{"cell_type":"code","source":"X_train,X_test,y_train,y_test=train_test_split(X_scaled,y,test_size=0.2,random_state=2024)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:14:08.075492Z","iopub.execute_input":"2024-07-06T13:14:08.076697Z","iopub.status.idle":"2024-07-06T13:14:08.085868Z","shell.execute_reply.started":"2024-07-06T13:14:08.076631Z","shell.execute_reply":"2024-07-06T13:14:08.084751Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"lr=LogisticRegression()\nlr.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:14:21.6563Z","iopub.execute_input":"2024-07-06T13:14:21.656731Z","iopub.status.idle":"2024-07-06T13:14:21.680404Z","shell.execute_reply.started":"2024-07-06T13:14:21.656699Z","shell.execute_reply":"2024-07-06T13:14:21.679191Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score, confusion_matrix","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:16:15.766667Z","iopub.execute_input":"2024-07-06T13:16:15.767174Z","iopub.status.idle":"2024-07-06T13:16:15.77305Z","shell.execute_reply.started":"2024-07-06T13:16:15.767139Z","shell.execute_reply":"2024-07-06T13:16:15.771385Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y_pred=lr.predict(X_test)\nprint('accuracy score',accuracy_score(y_pred,y_test))","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:17:45.701208Z","iopub.execute_input":"2024-07-06T13:17:45.702426Z","iopub.status.idle":"2024-07-06T13:17:45.71006Z","shell.execute_reply.started":"2024-07-06T13:17:45.702383Z","shell.execute_reply":"2024-07-06T13:17:45.708907Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cm1 = confusion_matrix(lr.predict(X_scaled),y)\n\nplt.figure(figsize=(6,4))\nplt.title('Confusion Matrix for entire Data', fontsize=12)\nsns.heatmap(cm1, annot=True, fmt='g', cmap='coolwarm')\nplt.xlabel('Predicted Value', fontsize=14)\nplt.ylabel('Actual Value', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:18:22.206239Z","iopub.execute_input":"2024-07-06T13:18:22.207313Z","iopub.status.idle":"2024-07-06T13:18:22.580322Z","shell.execute_reply.started":"2024-07-06T13:18:22.207271Z","shell.execute_reply":"2024-07-06T13:18:22.579168Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rf=RandomForestClassifier()\nrf.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:19:30.998Z","iopub.execute_input":"2024-07-06T13:19:30.998493Z","iopub.status.idle":"2024-07-06T13:19:31.229195Z","shell.execute_reply.started":"2024-07-06T13:19:30.998457Z","shell.execute_reply":"2024-07-06T13:19:31.227929Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"rf_y_pred=rf.predict(X_test)\nprint(accuracy_score(rf_y_pred,y_test))","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:20:16.416432Z","iopub.execute_input":"2024-07-06T13:20:16.4173Z","iopub.status.idle":"2024-07-06T13:20:16.437666Z","shell.execute_reply.started":"2024-07-06T13:20:16.417264Z","shell.execute_reply":"2024-07-06T13:20:16.436356Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Feature Importance in RandomForestClassifier","metadata":{}},{"cell_type":"code","source":"rf_feature_importance=rf.feature_importances_\nplt.figure(figsize=(6,4))\nsns.barplot(x=new_df.columns[:-1],y=rf_feature_importance)\nplt.xlabel('Feature Importance')\nplt.ylabel('Importance value')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-07-06T13:22:43.696626Z","iopub.execute_input":"2024-07-06T13:22:43.697141Z","iopub.status.idle":"2024-07-06T13:22:43.954478Z","shell.execute_reply.started":"2024-07-06T13:22:43.697086Z","shell.execute_reply":"2024-07-06T13:22:43.953316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Hyper Parameter Tuning","metadata":{}},{"cell_type":"code","source":"# Define parameter grid\nparam_grid_lr = {\n    'penalty': ['l1', 'l2'],\n    'C': [0.01, 0.1, 1, 10],\n    'solver': ['liblinear', 'lbfgs'],\n    'max_iter': [100, 200]\n}\n\n# param_grid_rf = {\n#     'n_estimators': [50,100, 200],\n#     'max_features': ['auto', 'sqrt', 'log2'],\n#     'max_depth': [5, 7, 10, 15,None],\n#     'min_samples_split': [2, 5, 10],\n#     'min_samples_leaf': [1, 2, 4],\n#     'bootstrap': [True, False]\n# }\n\ngrid_search_lr=GridSearchCV(estimator=LogisticRegression(),param_grid=param_grid_lr,cv=5,scoring='accuracy')\n# grid_search_rf=GridSearchCV(estimator=RandomForestClassifier(),param_grid=param_grid_rf,cv=5,scoring='accuracy')\n\ngrid_search_lr.fit(X_train,y_train)\n# grid_search_rf.fit(X_train,y_train)\n\nprint('Logistic regression best parameters:',grid_search_lr.best_estimator_)\n# print('Random forest best parameters:',grid_search_rf.best_estimator_)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:01:58.878653Z","iopub.execute_input":"2024-07-06T14:01:58.879081Z","iopub.status.idle":"2024-07-06T14:01:59.387444Z","shell.execute_reply.started":"2024-07-06T14:01:58.879043Z","shell.execute_reply":"2024-07-06T14:01:59.386316Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"grid_search_lr.best_params_","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:02:26.074596Z","iopub.execute_input":"2024-07-06T14:02:26.075086Z","iopub.status.idle":"2024-07-06T14:02:26.082636Z","shell.execute_reply.started":"2024-07-06T14:02:26.075048Z","shell.execute_reply":"2024-07-06T14:02:26.081399Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"best_lr=LogisticRegression(C=1, penalty='l1', solver='liblinear',max_iter=100)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:04:35.394526Z","iopub.execute_input":"2024-07-06T14:04:35.395032Z","iopub.status.idle":"2024-07-06T14:04:35.400614Z","shell.execute_reply.started":"2024-07-06T14:04:35.394997Z","shell.execute_reply":"2024-07-06T14:04:35.39946Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"best_lr.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:04:38.202512Z","iopub.execute_input":"2024-07-06T14:04:38.202926Z","iopub.status.idle":"2024-07-06T14:04:38.213855Z","shell.execute_reply.started":"2024-07-06T14:04:38.202892Z","shell.execute_reply":"2024-07-06T14:04:38.212683Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cm1 = confusion_matrix(best_lr.predict(X_scaled),y)\n\nplt.figure(figsize=(6,4))\nplt.title('Confusion Matrix for entire Data', fontsize=12)\nsns.heatmap(cm1, annot=True, fmt='g', cmap='coolwarm')\nplt.xlabel('Predicted Value', fontsize=14)\nplt.ylabel('Actual Value', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:04:40.547882Z","iopub.execute_input":"2024-07-06T14:04:40.548872Z","iopub.status.idle":"2024-07-06T14:04:40.908258Z","shell.execute_reply.started":"2024-07-06T14:04:40.548833Z","shell.execute_reply":"2024-07-06T14:04:40.907171Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Random forest best parameters:**\n    {'bootstrap': True,\n 'max_depth': 5,\n 'max_features': 'auto',\n 'min_samples_leaf': 1,\n 'min_samples_split': 5,\n 'n_estimators': 100}","metadata":{}},{"cell_type":"code","source":"best_rf=RandomForestClassifier(n_estimators=100,max_depth=5,min_samples_split=5,min_samples_leaf=1)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:01:23.64198Z","iopub.execute_input":"2024-07-06T14:01:23.642992Z","iopub.status.idle":"2024-07-06T14:01:23.648562Z","shell.execute_reply.started":"2024-07-06T14:01:23.642953Z","shell.execute_reply":"2024-07-06T14:01:23.647304Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"best_rf.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:01:26.516292Z","iopub.execute_input":"2024-07-06T14:01:26.517178Z","iopub.status.idle":"2024-07-06T14:01:26.744716Z","shell.execute_reply.started":"2024-07-06T14:01:26.51714Z","shell.execute_reply":"2024-07-06T14:01:26.743584Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"cm1 = confusion_matrix(best_rf.predict(X_scaled),y)\n\nplt.figure(figsize=(6,4))\nplt.title('Confusion Matrix for entire Data', fontsize=12)\nsns.heatmap(cm1, annot=True, fmt='g', cmap='coolwarm')\nplt.xlabel('Predicted Value', fontsize=14)\nplt.ylabel('Actual Value', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T14:01:31.9614Z","iopub.execute_input":"2024-07-06T14:01:31.961846Z","iopub.status.idle":"2024-07-06T14:01:32.35606Z","shell.execute_reply.started":"2024-07-06T14:01:31.96181Z","shell.execute_reply":"2024-07-06T14:01:32.354944Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Thank you for reading this notebook 😎💚💚🤍💛🖤. I hope you enjoyed and learn something new❕ ⬆upvote it if you really liked it and comment your suggestion and thoughts.**","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}